on:
  push:
    branches:
      - main # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]

name: SonarQube
jobs:
  sonarqube:
    name: SonarQube Build
    runs-on: ubuntu-latest
    steps:
      - name: Checking out
        uses: actions/checkout@main
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/ #path to packages cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ~/ #path to scanner cache
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Build and scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: |
          dotnet sonarscanner begin /k:${{ secrets.SONARQUBE_PROJECT }} /d:sonar.host.url=${{ secrets.SONARQUBE_HOST }}  /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}
          dotnet build
          dotnet sonarscanner end /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}
